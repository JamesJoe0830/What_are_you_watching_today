{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport DrawerContentScrollView from './DrawerContentScrollView';\nimport DrawerItemList from './DrawerItemList';\nexport default function DrawerContent(_ref) {\n  let {\n    descriptors,\n    state,\n    ...rest\n  } = _ref;\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n  const {\n    drawerContentStyle,\n    drawerContentContainerStyle\n  } = focusedOptions;\n  return /*#__PURE__*/React.createElement(DrawerContentScrollView, _extends({}, rest, {\n    contentContainerStyle: drawerContentContainerStyle,\n    style: drawerContentStyle\n  }), /*#__PURE__*/React.createElement(DrawerItemList, _extends({\n    descriptors: descriptors,\n    state: state\n  }, rest)));\n}","map":{"version":3,"names":["React","DrawerContentScrollView","DrawerItemList","DrawerContent","_ref","descriptors","state","rest","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","drawerContentStyle","drawerContentContainerStyle","createElement","_extends","contentContainerStyle","style"],"sources":["/Users/jojaegyun/Desktop/Project/today/What_are_you_watching_today/node_modules/@react-navigation/drawer/src/views/DrawerContent.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { DrawerContentComponentProps } from '../types';\nimport DrawerContentScrollView from './DrawerContentScrollView';\nimport DrawerItemList from './DrawerItemList';\n\nexport default function DrawerContent({\n  descriptors,\n  state,\n  ...rest\n}: DrawerContentComponentProps) {\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const { drawerContentStyle, drawerContentContainerStyle } = focusedOptions;\n\n  return (\n    <DrawerContentScrollView\n      {...rest}\n      contentContainerStyle={drawerContentContainerStyle}\n      style={drawerContentStyle}\n    >\n      <DrawerItemList descriptors={descriptors} state={state} {...rest} />\n    </DrawerContentScrollView>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAIL;EAAA,IAJM;IACpCC,WAAW;IACXC,KAAK;IACL,GAAGC;EACwB,CAAC,GAAAH,IAAA;EAC5B,MAAMI,YAAY,GAAGF,KAAK,CAACG,MAAM,CAACH,KAAK,CAACI,KAAK,CAAC;EAC9C,MAAMC,iBAAiB,GAAGN,WAAW,CAACG,YAAY,CAACI,GAAG,CAAC;EACvD,MAAMC,cAAc,GAAGF,iBAAiB,CAACG,OAAO;EAEhD,MAAM;IAAEC,kBAAkB;IAAEC;EAA4B,CAAC,GAAGH,cAAc;EAE1E,oBACEb,KAAA,CAAAiB,aAAA,CAAChB,uBAAuB,EAAAiB,QAAA,KAClBX,IAAI;IACRY,qBAAqB,EAAEH,2BAA4B;IACnDI,KAAK,EAAEL;EAAmB,iBAE1Bf,KAAA,CAAAiB,aAAA,CAACf,cAAc,EAAAgB,QAAA;IAACb,WAAW,EAAEA,WAAY;IAACC,KAAK,EAAEA;EAAM,GAAKC,IAAI,EAAI,CAC5C;AAE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}