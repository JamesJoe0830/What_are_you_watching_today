{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegyun/Desktop/Project/today/What_are_you_watching_today/src/components/SideBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigation } from 'react-minimal-side-navigation';\nimport 'react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css';\nimport { Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SideBar() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false); //menu 초기값을 false로 설정\n  const handleMenu = () => {\n    setIsOpen(isOpen => !isOpen); // on off 개념\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleMenu(),\n      children: \" \\uCE74\\uD14C\\uACE0\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), isOpen &&\n    /*#__PURE__*/\n    // isOpen 이 참이라면 아래 코드 나와라 이게 핵심 \n    _jsxDEV(Navigation\n    // you can use your own router's api to get pathname\n    , {\n      activeItemId: \"/management/members\",\n      onSelect: _ref => {\n        let {\n          itemId\n        } = _ref;\n      } // maybe push to the route\n      ,\n\n      items: [{\n        title: '드라마',\n        itemId: '/ㅇㅇㅇ',\n        // you can use your own custom Icon component as well\n        // icon is optional\n        elemBefore: () => /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"inbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 35\n        }, this),\n        subNav: [{\n          title: 'Projects',\n          itemId: '/management/projects'\n        }, {\n          title: 'Members',\n          itemId: '/management/members'\n        }]\n      }, {\n        title: '영화',\n        //'Management',\n        itemId: '/management',\n        elemBefore: () => /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 35\n        }, this),\n        subNav: [{\n          title: 'Products',\n          itemId: '/management/products'\n        }, {\n          title: 'Actions',\n          itemId: '/management/actions'\n        }]\n      }, {\n        title: '유투브',\n        // 'Another Item',\n        itemId: '/another',\n        subNav: [{\n          title: '먹방',\n          itemId: '/management/ㅇㅇ'\n        }]\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SideBar, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = SideBar;\nconst Button = styled.button`\n  font-size:20px;\n  color: white;\n  /* background-color:black; */\n`;\n_c2 = Button;\nvar _c, _c2;\n$RefreshReg$(_c, \"SideBar\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["React","useState","Navigation","Icon","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","SideBar","_s","isOpen","setIsOpen","handleMenu","children","Button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","activeItemId","onSelect","_ref","itemId","items","title","elemBefore","name","subNav","_c","button","_c2","$RefreshReg$"],"sources":["/Users/jojaegyun/Desktop/Project/today/What_are_you_watching_today/src/components/SideBar.jsx"],"sourcesContent":["import React, {useState} from 'react';\n\nimport {Navigation} from 'react-minimal-side-navigation';\nimport 'react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css';\nimport { Icon } from 'semantic-ui-react';\nimport styled from 'styled-components';\nexport default function SideBar() {\n  const [isOpen, setIsOpen] = useState(false); //menu 초기값을 false로 설정\n  const handleMenu = () => {\n    setIsOpen (isOpen => !isOpen); // on off 개념\n  }\n    return (\n      <>\n      <Button onClick = {() => handleMenu()} > 카테고리</Button>\n      {isOpen && ( // isOpen 이 참이라면 아래 코드 나와라 이게 핵심 \n        <Navigation\n            // you can use your own router's api to get pathname\n            activeItemId=\"/management/members\"\n            onSelect={({itemId}) => {\n              // maybe push to the route\n            }}\n            items={[\n              {\n                title: '드라마',\n                itemId: '/ㅇㅇㅇ',\n                // you can use your own custom Icon component as well\n                // icon is optional\n                elemBefore: () => <Icon name=\"inbox\" />,\n                 subNav: [\n                  {\n                    title: 'Projects',\n                    itemId: '/management/projects',\n                  },\n                  {\n                    title: 'Members',\n                    itemId: '/management/members',\n                  },\n                ],\n              },\n              {\n                title: '영화',\n                //'Management',\n                itemId: '/management',\n                elemBefore: () => <Icon name=\"users\" />,\n                subNav: [\n                  {\n                    title: 'Products',\n                    itemId: '/management/products',\n                  },\n                  {\n                    title: 'Actions',\n                    itemId: '/management/actions',\n                  },\n                ],\n              },\n              {\n                title: '유투브',\n                // 'Another Item',\n                itemId: '/another',\n                subNav: [\n                  {\n                    title: '먹방',\n                    itemId: '/management/ㅇㅇ',\n                  },\n                ],\n              },\n            ]}\n          />)}\n          \n      </>\n    );\n}\n\nconst Button = styled.button`\n  font-size:20px;\n  color: white;\n  /* background-color:black; */\n`;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAErC,SAAQC,UAAU,QAAO,+BAA+B;AACxD,OAAO,kEAAkE;AACzE,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACvC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvBD,SAAS,CAAED,MAAM,IAAI,CAACA,MAAM,CAAC,CAAC,CAAC;EACjC,CAAC;;EACC,oBACEL,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACAR,OAAA,CAACS,MAAM;MAACC,OAAO,EAAIA,CAAA,KAAMH,UAAU,EAAG;MAAAC,QAAA,EAAE;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACrDT,MAAM;IAAA;IAAM;IACXL,OAAA,CAACJ;IACG;IAAA;MACAmB,YAAY,EAAC,qBAAqB;MAClCC,QAAQ,EAAEC,IAAA,IAAc;QAAA,IAAb;UAACC;QAAM,CAAC,GAAAD,IAAA;MAEnB,CAAC,CADC;MACA;;MACFE,KAAK,EAAE,CACL;QACEC,KAAK,EAAE,KAAK;QACZF,MAAM,EAAE,MAAM;QACd;QACA;QACAG,UAAU,EAAEA,CAAA,kBAAMrB,OAAA,CAACH,IAAI;UAACyB,IAAI,EAAC;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;QACtCS,MAAM,EAAE,CACP;UACEH,KAAK,EAAE,UAAU;UACjBF,MAAM,EAAE;QACV,CAAC,EACD;UACEE,KAAK,EAAE,SAAS;UAChBF,MAAM,EAAE;QACV,CAAC;MAEL,CAAC,EACD;QACEE,KAAK,EAAE,IAAI;QACX;QACAF,MAAM,EAAE,aAAa;QACrBG,UAAU,EAAEA,CAAA,kBAAMrB,OAAA,CAACH,IAAI;UAACyB,IAAI,EAAC;QAAO;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;QACvCS,MAAM,EAAE,CACN;UACEH,KAAK,EAAE,UAAU;UACjBF,MAAM,EAAE;QACV,CAAC,EACD;UACEE,KAAK,EAAE,SAAS;UAChBF,MAAM,EAAE;QACV,CAAC;MAEL,CAAC,EACD;QACEE,KAAK,EAAE,KAAK;QACZ;QACAF,MAAM,EAAE,UAAU;QAClBK,MAAM,EAAE,CACN;UACEH,KAAK,EAAE,IAAI;UACXF,MAAM,EAAE;QACV,CAAC;MAEL,CAAC;IACD;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA,gBAEJ;AAET;AAACV,EAAA,CAjEuBD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAmE/B,MAAMM,MAAM,GAAGX,MAAM,CAAC2B,MAAO;AAC7B;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIjB,MAAM;AAAA,IAAAe,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}