{"ast":null,"code":"var _jsxFileName = \"/Users/jojaegyun/Desktop/Project/today/What_are_you_watching_today/src/components/SideBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"./sidebar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = _ref => {\n  _s();\n  let {\n    width = 280,\n    children\n  } = _ref;\n  const [isOpen, setOpen] = useState(false);\n  const [xPosition, setX] = useState(-width);\n  const side = useRef();\n\n  // button 클릭 시 토글\n  const toggleMenu = () => {\n    if (xPosition < 0) {\n      setX(0);\n      setOpen(true);\n    } else {\n      setX(-width);\n      setOpen(false);\n    }\n  };\n\n  // 사이드바 외부 클릭시 닫히는 함수\n  const handleClose = async e => {\n    let sideArea = side.current;\n    let sideCildren = side.current.contains(e.target);\n    if (isOpen && (!sideArea || !sideCildren)) {\n      await setX(-width);\n      await setOpen(false);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('click', handleClose);\n    return () => {\n      window.removeEventListener('click', handleClose);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: side,\n      className: styles.sidebar,\n      style: {\n        width: `${width}px`,\n        height: '100%',\n        transform: `translatex(${-xPosition}px)`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleMenu(),\n        className: styles.button,\n        children: isOpen ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/avatar.png\",\n          alr: \"contact open button\",\n          className: styles.openBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \" //\\uC0AC\\uC774\\uB4DC\\uBC14 \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uB0B4\\uBD80 \\uAC12\\uC774 \\uAD6C\\uD604\\uB418\\uB294 \\uC704\\uCE58\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"keqHrKeJpcTMzsm3Lj8jPUBAMSo=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styles","jsxDEV","_jsxDEV","Sidebar","_ref","_s","width","children","isOpen","setOpen","xPosition","setX","side","toggleMenu","handleClose","e","sideArea","current","sideCildren","contains","target","window","addEventListener","removeEventListener","className","container","ref","sidebar","style","height","transform","onClick","button","fileName","_jsxFileName","lineNumber","columnNumber","src","alr","openBtn","content","_c","$RefreshReg$"],"sources":["/Users/jojaegyun/Desktop/Project/today/What_are_you_watching_today/src/components/SideBar.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState } from \"react\";\nimport styles from \"./sidebar.css\";\n\n\nconst Sidebar = ({ width=280, children }) => {\n  const [isOpen, setOpen] = useState(false);\n  const [xPosition, setX] = useState(-width);\n  const side = useRef();\n  \n  // button 클릭 시 토글\n  const toggleMenu = () => {\n    if (xPosition < 0) {\n      setX(0);\n      setOpen(true);\n    } else {\n      setX(-width);\n      setOpen(false);\n    }\n  };\n  \n  // 사이드바 외부 클릭시 닫히는 함수\n  const handleClose = async e => {\n    let sideArea = side.current;\n    let sideCildren = side.current.contains(e.target);\n    if (isOpen && (!sideArea || !sideCildren)) {\n      await setX(-width); \n      await setOpen(false);\n    }\n  }\n\n  useEffect(()=> {\n    window.addEventListener('click', handleClose);\n    return () => {\n      window.removeEventListener('click', handleClose);\n    };\n  })\n\n\n  return (\n    <div className={styles.container}>\n      <div ref={side}  className={styles.sidebar} style={{ width: `${width}px`, height: '100%',  transform: `translatex(${-xPosition}px)`}}>\n          <button onClick={() => toggleMenu()}\n          className={styles.button} >\n            {isOpen ? \n            <span>X</span> : <img src=\"images/avatar.png\" alr=\"contact open button\" className={styles.openBtn}/>\n            }\n          </button>\n        <div className={styles.content}>{children}</div> //사이드바 컴포넌트 내부 값이 구현되는 위치\n      </div>\n    </div>\n  );\n};\n\n\nexport default Sidebar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}