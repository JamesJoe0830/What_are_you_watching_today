{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { ComplexAnimationBuilder } from '../animationBuilder/ComplexAnimationBuilder';\nexport class LinearTransition extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"build\", () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const callback = this.callbackV;\n      const delay = this.getDelay();\n      return values => {\n        'worklet';\n\n        return {\n          initialValues: {\n            originX: values.currentOriginX,\n            originY: values.currentOriginY,\n            width: values.currentWidth,\n            height: values.currentHeight\n          },\n          animations: {\n            originX: delayFunction(delay, animation(values.targetOriginX, config)),\n            originY: delayFunction(delay, animation(values.targetOriginY, config)),\n            width: delayFunction(delay, animation(values.targetWidth, config)),\n            height: delayFunction(delay, animation(values.targetHeight, config))\n          },\n          callback: callback\n        };\n      };\n    });\n  }\n  static createInstance() {\n    return new LinearTransition();\n  }\n}\nexport const Layout = LinearTransition;","map":{"version":3,"names":["ComplexAnimationBuilder","LinearTransition","constructor","arguments","_defineProperty","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","callback","callbackV","delay","getDelay","values","initialValues","originX","currentOriginX","originY","currentOriginY","width","currentWidth","height","currentHeight","animations","targetOriginX","targetOriginY","targetWidth","targetHeight","createInstance","Layout"],"sources":["/Users/jojaegyun/Desktop/Project/today/What_are_you_watching_today/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/defaultTransitions/LinearTransition.ts"],"sourcesContent":["import { ComplexAnimationBuilder } from '../animationBuilder/ComplexAnimationBuilder';\nimport {\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n} from '../animationBuilder/commonTypes';\n\nexport class LinearTransition\n  extends ComplexAnimationBuilder\n  implements ILayoutAnimationBuilder\n{\n  static createInstance(): LinearTransition {\n    return new LinearTransition();\n  }\n\n  build = (): LayoutAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const delay = this.getDelay();\n\n    return (values) => {\n      'worklet';\n      return {\n        initialValues: {\n          originX: values.currentOriginX,\n          originY: values.currentOriginY,\n          width: values.currentWidth,\n          height: values.currentHeight,\n        },\n        animations: {\n          originX: delayFunction(\n            delay,\n            animation(values.targetOriginX, config)\n          ),\n          originY: delayFunction(\n            delay,\n            animation(values.targetOriginY, config)\n          ),\n          width: delayFunction(delay, animation(values.targetWidth, config)),\n          height: delayFunction(delay, animation(values.targetHeight, config)),\n        },\n        callback: callback,\n      };\n    };\n  };\n}\n\nexport const Layout = LinearTransition;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,uBAAuB,QAAQ,6CAA6C;AAMrF,OAAO,MAAMC,gBAAgB,SACnBD,uBAAuB,CAEjC;EAAAE,YAAA;IAAA,SAAAC,SAAA;IAAAC,eAAA,gBAKU,MAA+B;MACrC,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,EAAE;MAC7C,MAAM,CAACC,SAAS,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACC,qBAAqB,EAAE;MACxD,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS;MAC/B,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,EAAE;MAE7B,OAAQC,MAAM,IAAK;QACjB,SAAS;;QACT,OAAO;UACLC,aAAa,EAAE;YACbC,OAAO,EAAEF,MAAM,CAACG,cAAc;YAC9BC,OAAO,EAAEJ,MAAM,CAACK,cAAc;YAC9BC,KAAK,EAAEN,MAAM,CAACO,YAAY;YAC1BC,MAAM,EAAER,MAAM,CAACS;UACjB,CAAC;UACDC,UAAU,EAAE;YACVR,OAAO,EAAEX,aAAa,CACpBO,KAAK,EACLL,SAAS,CAACO,MAAM,CAACW,aAAa,EAAEjB,MAAM,CAAC,CACxC;YACDU,OAAO,EAAEb,aAAa,CACpBO,KAAK,EACLL,SAAS,CAACO,MAAM,CAACY,aAAa,EAAElB,MAAM,CAAC,CACxC;YACDY,KAAK,EAAEf,aAAa,CAACO,KAAK,EAAEL,SAAS,CAACO,MAAM,CAACa,WAAW,EAAEnB,MAAM,CAAC,CAAC;YAClEc,MAAM,EAAEjB,aAAa,CAACO,KAAK,EAAEL,SAAS,CAACO,MAAM,CAACc,YAAY,EAAEpB,MAAM,CAAC;UACrE,CAAC;UACDE,QAAQ,EAAEA;QACZ,CAAC;MACH,CAAC;IACH,CAAC;EAAA;EAlCD,OAAOmB,cAAcA,CAAA,EAAqB;IACxC,OAAO,IAAI5B,gBAAgB,EAAE;EAC/B;AAiCF;AAEA,OAAO,MAAM6B,MAAM,GAAG7B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}