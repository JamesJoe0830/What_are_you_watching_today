{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet } from 'react-native';\nexport default function DrawerToggleButton(_ref) {\n  let {\n    tintColor,\n    ...rest\n  } = _ref;\n  const navigation = useNavigation();\n  return /*#__PURE__*/React.createElement(PlatformPressable, _extends({}, rest, {\n    accessible: true,\n    accessibilityRole: \"button\",\n    android_ripple: {\n      borderless: true\n    },\n    onPress: () => navigation.dispatch(DrawerActions.toggleDrawer()),\n    style: styles.touchable,\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }), /*#__PURE__*/React.createElement(Image, {\n    style: [styles.icon, tintColor ? {\n      tintColor\n    } : null],\n    source: require('./assets/toggle-drawer-icon.png'),\n    fadeDuration: 0\n  }));\n}\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  },\n  touchable: {\n    marginHorizontal: 11\n  }\n});","map":{"version":3,"names":["PlatformPressable","DrawerActions","useNavigation","React","Image","Platform","StyleSheet","DrawerToggleButton","_ref","tintColor","rest","navigation","createElement","_extends","accessible","accessibilityRole","android_ripple","borderless","onPress","dispatch","toggleDrawer","style","styles","touchable","hitSlop","select","ios","undefined","default","top","right","bottom","left","icon","source","require","fadeDuration","create","height","width","margin","resizeMode","marginHorizontal"],"sources":["/Users/jojaegyun/Desktop/Project/today/What_are_you_watching_today/node_modules/@react-navigation/drawer/src/views/DrawerToggleButton.tsx"],"sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  ParamListBase,\n  useNavigation,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '../types';\n\ntype Props = {\n  accessibilityLabel?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  tintColor?: string;\n};\n\nexport default function DrawerToggleButton({ tintColor, ...rest }: Props) {\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\n\n  return (\n    <PlatformPressable\n      {...rest}\n      accessible\n      accessibilityRole=\"button\"\n      android_ripple={{ borderless: true }}\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n      style={styles.touchable}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <Image\n        style={[styles.icon, tintColor ? { tintColor } : null]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n});\n"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,iBAAiB,QAAQ,4BAA4B;AAC9D,SACEC,aAAa,EAEbC,aAAa,QACR,0BAA0B;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,cAAc;AAW1D,eAAe,SAASC,kBAAkBA,CAAAC,IAAA,EAAgC;EAAA,IAA/B;IAAEC,SAAS;IAAE,GAAGC;EAAY,CAAC,GAAAF,IAAA;EACtE,MAAMG,UAAU,GAAGT,aAAa,EAAuC;EAEvE,oBACEC,KAAA,CAAAS,aAAA,CAACZ,iBAAiB,EAAAa,QAAA,KACZH,IAAI;IACRI,UAAU;IACVC,iBAAiB,EAAC,QAAQ;IAC1BC,cAAc,EAAE;MAAEC,UAAU,EAAE;IAAK,CAAE;IACrCC,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAACQ,QAAQ,CAAClB,aAAa,CAACmB,YAAY,EAAE,CAAE;IACjEC,KAAK,EAAEC,MAAM,CAACC,SAAU;IACxBC,OAAO,EAAEnB,QAAQ,CAACoB,MAAM,CAAC;MACvBC,GAAG,EAAEC,SAAS;MACdC,OAAO,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG;IACtD,CAAC;EAAE,iBAEH7B,KAAA,CAAAS,aAAA,CAACR,KAAK;IACJiB,KAAK,EAAE,CAACC,MAAM,CAACW,IAAI,EAAExB,SAAS,GAAG;MAAEA;IAAU,CAAC,GAAG,IAAI,CAAE;IACvDyB,MAAM,EAAEC,OAAO,CAAC,iCAAiC,CAAE;IACnDC,YAAY,EAAE;EAAE,EAChB,CACgB;AAExB;AAEA,MAAMd,MAAM,GAAGhB,UAAU,CAAC+B,MAAM,CAAC;EAC/BJ,IAAI,EAAE;IACJK,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,CAAC;IACTC,UAAU,EAAE;EACd,CAAC;EACDlB,SAAS,EAAE;IACTmB,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}